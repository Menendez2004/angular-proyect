{
    "pipes": [
        {
            "name": "HeroImagePipe",
            "id": "pipe-HeroImagePipe-93a6a78ad0874d6a46823e15526e6fa07eb25217ac82b5d2864a88454033a63e43e1d2588c93770b1001d819a0eef4718194d792201598d5079835e0fa5805f3",
            "file": "src/app/heroes/pipes/hero-image.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "hero",
                            "type": "Hero",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "hero",
                            "type": "Hero",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": true,
            "ngname": "heroImage",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Hero } from '../interfaces/hero.interface';\r\n\r\n@Pipe({\r\n  name: 'heroImage',\r\n  standalone: true\r\n})\r\nexport class HeroImagePipe implements PipeTransform {\r\n\r\n  transform(hero: Hero): string {\r\n\r\n    if (!hero || (!hero.id && !hero.alt_img)) {\r\n      return 'assets/no-image.png';\r\n    }\r\n\r\n    if (hero.alt_img?.trim()) return hero.alt_img;\r\n\r\n    return `assets/heroes/${hero.id}.jpg`;\r\n  }\r\n\r\n\r\n}\r\n"
        }
    ],
    "interfaces": [
        {
            "name": "Hero",
            "id": "interface-Hero-f645dc6fa6eba719aa4c2cc662a215d6977e30864af7cd8774cedd4824f3ee705385428de06b82d5449fa2b863d12610d068a3aa71f07ab15ca64e8c883e2fca",
            "file": "src/app/heroes/interfaces/hero.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Hero {\r\n  id:               string;\r\n  superhero:        string;\r\n  publisher:        Publisher;\r\n  alter_ego:        string;\r\n  first_appearance: string;\r\n  characters:       string;\r\n  alt_img?:         string ;\r\n}\r\n\r\nexport enum Publisher {\r\n  DCComics = \"DC Comics\",\r\n  MarvelComics = \"Marvel Comics\",\r\n}\r\n",
            "properties": [
                {
                    "name": "alt_img",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "alter_ego",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "characters",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "first_appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "publisher",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Publisher",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "superhero",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "HeroState",
            "id": "interface-HeroState-2ecb1a71184db1fca722defc4fdd2eaabc8bc56145b101ee6d912de6ff0d3cf372ca8f0507f7b2c21ac57a52da7752e1721babd0ec27d4abc8b2b4a87cc4bfa6",
            "file": "src/app/heroes/store/interfaces/hero.state.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Hero } from \"../../interfaces/hero.interface\";\r\nexport interface HeroState {\r\n    hero: Hero | null;\r\n    loading: boolean;\r\n    error: any;\r\n}",
            "properties": [
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "hero",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Hero | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-9f7319d56b2ba6bb5cf99158d2fe3e352fd3fc4ed34b175ce4543f104f20e4d10e754aa05aff64bc95dac75baef83be5013e09959193f917dd1f8839eb1ba651-1",
            "file": "src/app/auth/interfaces/user.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\r\n  id:    number;\r\n  user:  string;\r\n  email: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "User-1"
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-309878d20a18a0953c45f5e9562d7870682908a952f8b327e2cae4eb1163acb0e068c7c2038bbcf8a4a349f8d244bdc44ede977cc79291d5114e8728e272a48f",
            "file": "src/app/auth/services/auth.service.ts",
            "properties": [
                {
                    "name": "baseUrl",
                    "defaultValue": "environments.baseUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "checkAuthentication",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<User>",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable, tap, of, map, catchError } from 'rxjs';\r\n\r\nimport { environments } from '../../../environments/environments';\r\nimport { User } from '../interfaces/user.interface';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthService {\r\n\r\n  private baseUrl = environments.baseUrl;\r\n  private user?: User;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  get currentUser():User|undefined {\r\n    if ( !this.user ) return undefined;\r\n    return structuredClone( this.user );\r\n  }\r\n\r\n  login( email: string, password: string ):Observable<User> {\r\n    return this.http.get<User>(`${ this.baseUrl }/users/1`)\r\n      .pipe(\r\n        tap( user => this.user = user ),\r\n        tap( user => localStorage.setItem('token', 'aASDgjhasda.asdasd.aadsf123k' )),\r\n      );\r\n  }\r\n\r\n  checkAuthentication(): Observable<boolean> {\r\n\r\n    if ( !localStorage.getItem('token') ) return of(false);\r\n\r\n    const token = localStorage.getItem('token');\r\n\r\n    return this.http.get<User>(`${ this.baseUrl }/users/1`)\r\n      .pipe(\r\n        tap( user => this.user = user ),\r\n        map( user => !!user ),\r\n        catchError( err => of(false) )\r\n      );\r\n\r\n  }\r\n\r\n\r\n  logout() {\r\n    this.user = undefined;\r\n    localStorage.clear();\r\n  }\r\n\r\n\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "currentUser": {
                    "name": "currentUser",
                    "getSignature": {
                        "name": "currentUser",
                        "type": "",
                        "returnType": "User | undefined",
                        "line": 17
                    }
                }
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "HeroEffects",
            "id": "injectable-HeroEffects-4d4112be5bdf42736c272e55d0649e211f4f57759d7fec39b936ed100676520b276ff72386824834ef5bb81a5723dfe642f33771584f43bc6545881b3921b285",
            "file": "src/app/heroes/store/effects/hero.effects.ts",
            "properties": [
                {
                    "name": "actions$",
                    "defaultValue": "inject(Actions)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "createHero",
                    "defaultValue": "createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(HeroActions.createHero),\r\n            mergeMap(({ hero }) =>\r\n                this.heroesService.addHero(hero).pipe(\r\n                    map(createdHero => HeroActions.createHeroSuccess({ hero: createdHero })),\r\n                    catchError(error => of(HeroActions.createHeroFailure({ error })))\r\n                )\r\n            )\r\n        )\r\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "createHeroSuccess$",
                    "defaultValue": "createEffect(\r\n        () =>\r\n            this.actions$.pipe(\r\n                ofType(HeroActions.createHeroSuccess),\r\n                tap(({ hero }) => {\r\n                    this.showSnackbar(`${hero.superhero} created!`);\r\n                })\r\n            ),\r\n        { dispatch: false }\r\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "deleteHero",
                    "defaultValue": "createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(HeroActions.deleteHero),\r\n            mergeMap(({ id }) =>\r\n                this.heroesService.deleteHeroById(id).pipe(\r\n                    map(() => HeroActions.deleteHeroSuccess({ id })),\r\n                    catchError(error => of(HeroActions.deleteHeroFailure({ error })))\r\n                )\r\n            )\r\n        )\r\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "deleteHeroSuccess",
                    "defaultValue": "createEffect(\r\n        () =>\r\n            this.actions$.pipe(\r\n                ofType(HeroActions.deleteHeroSuccess),\r\n                tap(() => {\r\n                    this.router.navigate(['/heroes']);\r\n                })\r\n            ),\r\n        { dispatch: false }\r\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 91
                },
                {
                    "name": "heroesService",
                    "defaultValue": "inject(HeroesService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "loadHero",
                    "defaultValue": "createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(HeroActions.loadHero),\r\n            mergeMap(({ id }) =>\r\n                this.heroesService.getHeroById(id).pipe(\r\n                    map(hero =>\r\n                        hero\r\n                            ? HeroActions.loadHeroSuccess({ hero })\r\n                            : HeroActions.loadHeroFailure({ error: 'Hero not found' })\r\n                    ),\r\n                    catchError(error => of(HeroActions.loadHeroFailure({ error })))\r\n                )\r\n            )\r\n        )\r\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "snackbar",
                    "defaultValue": "inject(MatSnackBar)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "updateHero",
                    "defaultValue": "createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(HeroActions.updateHero),\r\n            mergeMap(({ hero }) =>\r\n                this.heroesService.updateHero(hero).pipe(\r\n                    map(updatedHero => HeroActions.updateHeroSuccess({ hero: updatedHero })),\r\n                    catchError(error => of(HeroActions.updateHeroFailure({ error })))\r\n                )\r\n            )\r\n        )\r\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "updateHeroSuccess",
                    "defaultValue": "createEffect(\r\n        () =>\r\n            this.actions$.pipe(\r\n                ofType(HeroActions.updateHeroSuccess),\r\n                tap(({ hero }) => {\r\n                    this.showSnackbar(`${hero.superhero} updated!`);\r\n                })\r\n            ),\r\n        { dispatch: false }\r\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 68
                }
            ],
            "methods": [
                {
                    "name": "showSnackbar",
                    "args": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, inject } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { of } from 'rxjs';\r\nimport { map, mergeMap, catchError, tap } from 'rxjs/operators';\r\nimport { HeroesService } from '../../services/heroes.service';\r\nimport * as HeroActions from '../actions/hero.actions';\r\nimport { RedirectCommand, Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Injectable()\r\nexport class HeroEffects {\r\n    private readonly actions$ = inject(Actions);\r\n    private readonly heroesService = inject(HeroesService);\r\n    private readonly router = inject(Router);\r\n    private readonly snackbar = inject(MatSnackBar);\r\n\r\n    loadHero = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(HeroActions.loadHero),\r\n            mergeMap(({ id }) =>\r\n                this.heroesService.getHeroById(id).pipe(\r\n                    map(hero =>\r\n                        hero\r\n                            ? HeroActions.loadHeroSuccess({ hero })\r\n                            : HeroActions.loadHeroFailure({ error: 'Hero not found' })\r\n                    ),\r\n                    catchError(error => of(HeroActions.loadHeroFailure({ error })))\r\n                )\r\n            )\r\n        )\r\n    );\r\n\r\n    createHero = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(HeroActions.createHero),\r\n            mergeMap(({ hero }) =>\r\n                this.heroesService.addHero(hero).pipe(\r\n                    map(createdHero => HeroActions.createHeroSuccess({ hero: createdHero })),\r\n                    catchError(error => of(HeroActions.createHeroFailure({ error })))\r\n                )\r\n            )\r\n        )\r\n    );\r\n\r\n    createHeroSuccess$ = createEffect(\r\n        () =>\r\n            this.actions$.pipe(\r\n                ofType(HeroActions.createHeroSuccess),\r\n                tap(({ hero }) => {\r\n                    this.showSnackbar(`${hero.superhero} created!`);\r\n                })\r\n            ),\r\n        { dispatch: false }\r\n    );\r\n\r\n    updateHero = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(HeroActions.updateHero),\r\n            mergeMap(({ hero }) =>\r\n                this.heroesService.updateHero(hero).pipe(\r\n                    map(updatedHero => HeroActions.updateHeroSuccess({ hero: updatedHero })),\r\n                    catchError(error => of(HeroActions.updateHeroFailure({ error })))\r\n                )\r\n            )\r\n        )\r\n    );\r\n\r\n    updateHeroSuccess = createEffect(\r\n        () =>\r\n            this.actions$.pipe(\r\n                ofType(HeroActions.updateHeroSuccess),\r\n                tap(({ hero }) => {\r\n                    this.showSnackbar(`${hero.superhero} updated!`);\r\n                })\r\n            ),\r\n        { dispatch: false }\r\n    );\r\n\r\n    deleteHero = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(HeroActions.deleteHero),\r\n            mergeMap(({ id }) =>\r\n                this.heroesService.deleteHeroById(id).pipe(\r\n                    map(() => HeroActions.deleteHeroSuccess({ id })),\r\n                    catchError(error => of(HeroActions.deleteHeroFailure({ error })))\r\n                )\r\n            )\r\n        )\r\n    );\r\n\r\n    deleteHeroSuccess = createEffect(\r\n        () =>\r\n            this.actions$.pipe(\r\n                ofType(HeroActions.deleteHeroSuccess),\r\n                tap(() => {\r\n                    this.router.navigate(['/heroes']);\r\n                })\r\n            ),\r\n        { dispatch: false }\r\n    );\r\n\r\n    private showSnackbar(message: string): void {\r\n        this.snackbar.open(message, 'Done', { duration: 2500 });\r\n        this.router.navigate(['/heroes']);\r\n    }\r\n\r\n\r\n}\r\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "HeroesService",
            "id": "injectable-HeroesService-f643c00b1fb76a1a193c2874dd610d2bf2f2691a670ff79eda7c35abac0322744fcfa6ea855dd53bb90eac00505bbc83a088798f715f40bebf79cb6ee152ee1b",
            "file": "src/app/heroes/services/heroes.service.ts",
            "properties": [
                {
                    "name": "baseUrl",
                    "defaultValue": "environments.baseUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addHero",
                    "args": [
                        {
                            "name": "hero",
                            "type": "Hero",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Hero>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "hero",
                            "type": "Hero",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteHeroById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getHeroById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Hero | undefined>",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getHeroes",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Hero[]>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getSuggestions",
                    "args": [
                        {
                            "name": "query",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Hero[]>",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "query",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateHero",
                    "args": [
                        {
                            "name": "hero",
                            "type": "Hero",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Hero>",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "hero",
                            "type": "Hero",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map, Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { Hero } from '../interfaces/hero.interface';\r\nimport { environments } from '../../../environments/environments';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class HeroesService {\r\n\r\n  private baseUrl: string = environments.baseUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getHeroes(): Observable<Hero[]> {\r\n    return this.http.get<Hero[]>(`${this.baseUrl}/heroes`);\r\n  }\r\n\r\n  getHeroById(id: string): Observable<Hero | undefined> {\r\n    return this.http.get<Hero>(`${this.baseUrl}/heroes/${id}`)\r\n      .pipe(\r\n        catchError(error => of(undefined))\r\n      );\r\n  }\r\n\r\n  getSuggestions(query: string | undefined): Observable<Hero[]> {\r\n    return this.http.get<Hero[]>(`${this.baseUrl}/heroes?q=${query ?? ''}&_limit=100`);\r\n  }\r\n\r\n  addHero(hero: Hero): Observable<Hero> {\r\n    return this.http.post<Hero>(`${this.baseUrl}/heroes`, hero).pipe(\r\n      tap(createdHero => console.log('Created hero:', createdHero)) \r\n    );\r\n  }\r\n\r\n  updateHero(hero: Hero): Observable<Hero> {\r\n    if (!hero.id) throw Error('Hero id is required');\r\n\r\n    return this.http.patch<Hero>(`${this.baseUrl}/heroes/${hero.id}`, hero);\r\n  }\r\n\r\n  deleteHeroById(id: string): Observable<boolean> {\r\n\r\n    return this.http.delete(`${this.baseUrl}/heroes/${id}`)\r\n      .pipe(\r\n        map(resp => true),\r\n        catchError(err => of(false)),\r\n      );\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AuthGuard",
            "id": "injectable-AuthGuard-64552b4fc081b7d3e97ae251059113ef8898acf633ad50dd590c1e6cd0107f8809b0a970d86cfa2a099e1be5d3b1ea22d1cfb5b5116ad7404e53dc1530de8041",
            "file": "src/app/auth/guards/auth.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean | Observable",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "canMatch",
                    "args": [
                        {
                            "name": "route",
                            "type": "Route",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "segments",
                            "type": "UrlSegment[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean | Observable",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "Route",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "segments",
                            "type": "UrlSegment[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "checkAuthStatus",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, CanMatch, Route, UrlSegment, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { catchError, Observable, of, tap } from 'rxjs';\r\n\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanMatch, CanActivate {\r\n\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  private checkAuthStatus(): Observable<boolean> {\r\n    return this.authService.checkAuthentication()\r\n      .pipe(\r\n        tap(isAuthenticated => console.log('Authenticated:', isAuthenticated)),\r\n        tap(isAuthenticated => {\r\n          if (!isAuthenticated) {\r\n            this.router.navigate(['./auth/login']);\r\n          }\r\n        }),\r\n        catchError(error => {\r\n          console.error('Auth check error:', error);\r\n          this.router.navigate(['./auth/login']);\r\n          return of(false);\r\n        })\r\n      );\r\n  }\r\n\r\n  canMatch(route: Route, segments: UrlSegment[]): boolean | Observable<boolean> {\r\n    return this.checkAuthStatus();\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | Observable<boolean> {\r\n\r\n    return this.checkAuthStatus();\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "guard"
        },
        {
            "name": "PublicGuard",
            "id": "injectable-PublicGuard-3ef6f2dba14658cea09231c29897f4714b336256a84112b60d87e98d1f7195f859f6ad3fd03d137443de66b4b3d417061e9fa5257bced085f25129ef90327e3a",
            "file": "src/app/auth/guards/public.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean | Observable",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "canMatch",
                    "args": [
                        {
                            "name": "route",
                            "type": "Route",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "segments",
                            "type": "UrlSegment[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean | Observable",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "Route",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "segments",
                            "type": "UrlSegment[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "checkAuthStatus",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean | Observable",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { CanMatch, CanActivate, Router, Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, tap, map } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PublicGuard implements CanMatch, CanActivate {\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private router: Router,\r\n    ) { }\r\n\r\n    private checkAuthStatus(): boolean | Observable<boolean> {\r\n\r\n        return this.authService.checkAuthentication()\r\n            .pipe(\r\n                tap(isAuthenticated => console.log('Authenticated:', isAuthenticated)),\r\n                tap(isAuthenticated => {\r\n                    if (isAuthenticated) {\r\n                        this.router.navigate(['./'])\r\n                    }\r\n                }),\r\n                map(isAuthenticated => !isAuthenticated)\r\n            )\r\n\r\n    }\r\n\r\n\r\n    canMatch(route: Route, segments: UrlSegment[]): boolean | Observable<boolean> {\r\n\r\n        return this.checkAuthStatus();\r\n    }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | Observable<boolean> {\r\n\r\n\r\n        return this.checkAuthStatus();\r\n    }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "guard"
        }
    ],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-51054bbf6e944b39edb59bfd677d7fa5386f5afe96039a2445809d5bbed5c98f993f6881a952ce95a239275e33b0280d8dc20e12c64e7661131848698903d364",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'agular-proyect'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  standalone: false,\r\n  styleUrl: './app.component.css'\r\n})\r\nexport class AppComponent {\r\n  title = 'agular-proyect';\r\n}\r\n",
            "styleUrl": "./app.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "\r\n<router-outlet></router-outlet>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-d7bf0323e6da130e2609e2af0117b4a8d7cd874132206af50bf43dfc37044485fe50f2867ea76525730dd195b9b95a43802a12dadc6ad5cd7bf2faa07f19f0da",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": " <button  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhat background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 760,
                            "end": 773,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 761,
                                "end": 769,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIs this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nHow large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 29,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOptional click handler",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /** Is this the principal call to action on the page? */\n  @Input()\n  primary = false;\n\n  /** What background color to use */\n  @Input()\n  backgroundColor?: string;\n\n  /** How large should the button be? */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /** Optional click handler */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  display: inline-block;\n  cursor: pointer;\n  border: 0;\n  border-radius: 3em;\n  font-weight: 700;\n  line-height: 1;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n.storybook-button--primary {\n  background-color: #555ab9;\n  color: white;\n}\n.storybook-button--secondary {\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n  background-color: transparent;\n  color: #333;\n}\n.storybook-button--small {\n  padding: 10px 16px;\n  font-size: 12px;\n}\n.storybook-button--medium {\n  padding: 11px 20px;\n  font-size: 14px;\n}\n.storybook-button--large {\n  padding: 12px 24px;\n  font-size: 16px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 43
                    }
                }
            }
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-54c4009ba4e9605dc4694f94930436926efebe192410138ee33385d867e5e14cad401cc48bc8972a60475a5eda90906e75b87e12860daf1399ff01e795033bed",
            "file": "src/app/heroes/components/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "heroes-hero-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "hero",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "Hero",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { Hero } from '../../interfaces/hero.interface';\r\n\r\n@Component({\r\n  selector: 'heroes-hero-card',\r\n  templateUrl: './card.component.html',\r\n  standalone: false,\r\n  styles: [\r\n  ]\r\n})\r\nexport class CardComponent implements OnInit {\r\n\r\n  @Input()\r\n  public hero!: Hero;\r\n\r\n\r\n  ngOnInit(): void {\r\n    if ( !this.hero ) throw Error('Hero property is required');\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>{{ hero.superhero }}</mat-card-title>\r\n    <mat-card-subtitle>{{ hero.alter_ego }}</mat-card-subtitle>\r\n  </mat-card-header>\r\n\r\n  <img mat-card-image [src]=\"hero | heroImage\" [alt]=\"hero.superhero\">\r\n\r\n  <mat-card-content class=\"mt-2\">\r\n    <h4>{{ hero.publisher }}</h4>\r\n    <p>\r\n      <strong>Primera aparición</strong> {{ hero.first_appearance }}\r\n      <br>\r\n      <mat-chip-listbox>\r\n        <mat-chip *ngFor=\"let name of hero.characters.split(',') | slice:0:3\">\r\n          {{ name }}\r\n        </mat-chip>\r\n      </mat-chip-listbox>\r\n    </p>\r\n  </mat-card-content>\r\n\r\n  <mat-divider></mat-divider>\r\n\r\n  <mat-card-actions>\r\n\r\n    <button mat-button\r\n      mat-raised\r\n      color=\"primary\"\r\n      [routerLink]=\"['/heroes/edit', hero.id ]\">\r\n      <mat-icon>edit</mat-icon>\r\n      Editar\r\n    </button>\r\n\r\n    <span class=\"spacer\"></span>\r\n\r\n    <button mat-button\r\n      mat-raised\r\n      [routerLink]=\"['/heroes', hero.id ]\">\r\n      <mat-icon>more_horiz</mat-icon>\r\n      Más\r\n    </button>\r\n\r\n  </mat-card-actions>\r\n\r\n</mat-card>\r\n"
        },
        {
            "name": "ConfirmDialogComponent",
            "id": "component-ConfirmDialogComponent-6d0ac189aff3757d35105b7a753ea2a783746b7d35886bd02181937b19dd05cf3a154aa5bd4ae0adb2eafbcbdfbe3a38611a4f239b4360f0f9ee9d29ccb0168e",
            "file": "src/app/heroes/components/confirm-dialog/confirm-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-confirm-dialog",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./confirm-dialog.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Hero",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<ConfirmDialogComponent>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onConfirm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onNoClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Hero } from '../../interfaces/hero.interface';\r\n\r\n@Component({\r\n  selector: 'app-confirm-dialog',\r\n  templateUrl: './confirm-dialog.component.html',\r\n  standalone: false,\r\n  styles: [\r\n  ]\r\n})\r\nexport class ConfirmDialogComponent {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ConfirmDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: Hero,\r\n  ) {}\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  onConfirm():void {\r\n    this.dialogRef.close(true)\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<ConfirmDialogComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "Hero",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<ConfirmDialogComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "Hero",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<h1 mat-dialog-title>¿Está seguro?</h1>\r\n<div mat-dialog-content>\r\n  <p>Este proceso no es reversible, está a punto de elimiar a {{ data.superhero }}</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"onNoClick()\">No Thanks</button>\r\n  <span class=\"spacer\"></span>\r\n  <button mat-button color=\"primary\" (click)=\"onConfirm()\" cdkFocusInitial>Ok</button>\r\n</div>\r\n"
        },
        {
            "name": "Error404PageComponent",
            "id": "component-Error404PageComponent-6b808ddb49bcb18928d970f26c016f4804c2026f9bfb9c801bdb62531136bec2121640a0bf3c0463f715681464d1258d3d9123227ca80b65fc7dd6c53a49ba3e",
            "file": "src/app/common/pages/error404-page/error404-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-error404-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./error404-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error404-page',\r\n  templateUrl: './error404-page.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class Error404PageComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>error404-page works!</p>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-48b9abe37706bc42f20cfa97ed9f943678344ea7d254c0c82183c657750c2191b43486fe730c778627b2ea6aa0e2f33a7abcf3ce08b68ad18b062ad99ea97acb",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 6px 0 6px 10px;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  margin-right: 10px;\n  color: #333;\n  font-size: 14px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "HeroPageComponent",
            "id": "component-HeroPageComponent-3a9de779fe3d556936872cacfe9ea56922f8982bb1ef2309eef1303c494136e7cff0c48b890413e6b30b6af8e2fbda1dc44f136e784d4e5dd9560fad997978ea",
            "file": "src/app/heroes/pages/hero-page/hero-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-hero-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./hero-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hero",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Hero",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "goBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { switchMap } from 'rxjs';\r\n\r\nimport { HeroesService } from '../../services/heroes.service';\r\nimport { Hero } from '../../interfaces/hero.interface';\r\n\r\n@Component({\r\n  selector: 'app-hero-page',\r\n  templateUrl: './hero-page.component.html',\r\n  standalone: false,\r\n  styles: [\r\n  ]\r\n})\r\nexport class HeroPageComponent implements OnInit {\r\n\r\n  public hero?: Hero;\r\n\r\n  constructor(\r\n    private heroesService: HeroesService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params\r\n      .pipe(\r\n        switchMap( ({ id }) => this.heroesService.getHeroById( id )),\r\n      )\r\n      .subscribe( hero => {\r\n\r\n        if ( !hero ) return this.router.navigate([ '/heroes/list' ]);\r\n\r\n        this.hero = hero;\r\n        return;\r\n      })\r\n  }\r\n\r\n  goBack():void {\r\n    this.router.navigateByUrl('heroes/list')\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "heroesService",
                        "type": "HeroesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "heroesService",
                        "type": "HeroesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<ng-template #divLoading>\r\n    <mat-grid-list cols=\"1\">\r\n      <mat-grid-tile>\r\n        <mat-spinner></mat-spinner>\r\n      </mat-grid-tile>\r\n    </mat-grid-list>\r\n  </ng-template>\r\n  \r\n  \r\n  <div *ngIf=\"hero; else divLoading\" class=\"grid p-2\">\r\n  \r\n    <mat-card class=\"col-12 sm:col-6\">\r\n  \r\n      <mat-card-header>\r\n        <mat-card-title>{{ hero.alter_ego }}</mat-card-title>\r\n        <mat-card-subtitle>{{ hero.superhero }}</mat-card-subtitle>\r\n      </mat-card-header>\r\n  \r\n  \r\n      <img [src]=\"hero | heroImage\" [alt]=\"hero.superhero\" mat-card-image  />\r\n  \r\n    </mat-card>\r\n  \r\n    <mat-card class=\"col-12 sm:col-6\">\r\n  \r\n      <mat-card-header>\r\n        <mat-card-title>Información</mat-card-title>\r\n        <mat-card-subtitle>{{ hero.superhero }}</mat-card-subtitle>\r\n      </mat-card-header>\r\n  \r\n      <mat-card-content>\r\n        <mat-list>\r\n          <mat-list-item>{{ hero.first_appearance }}</mat-list-item>\r\n          <mat-list-item>{{ hero.characters }}</mat-list-item>\r\n          <mat-list-item>{{ hero.publisher }}</mat-list-item>\r\n          <mat-list-item>{{ hero.alter_ego }}</mat-list-item>\r\n        </mat-list>\r\n  \r\n        <button\r\n          mat-button\r\n          color=\"warn\"\r\n          (click)=\"goBack()\"\r\n        >\r\n          Regresar\r\n        </button>\r\n  \r\n      </mat-card-content>\r\n  \r\n  \r\n    </mat-card>\r\n  \r\n  \r\n  </div>\r\n  "
        },
        {
            "name": "LayoutPageComponent",
            "id": "component-LayoutPageComponent-493bb179bc540ac48ba2700f54db2474f62077fdc3545d29812692d7029dc963830adb30cae3cb686a7383638f39a3fe18167908b78ecdde3bfb4a245b2ad69d",
            "file": "src/app/auth/pages/layout-page/layout-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-layout-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./layout-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-layout-page',\r\n  templateUrl: './layout-page.component.html',\r\n  standalone: false,\r\n  styles: [\r\n  ]\r\n})\r\nexport class LayoutPageComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"grid p-3\">\r\n    <div class=\"col-12 mt-5 md:col-6 md:col-offset-3 md:mt-8\">\r\n  \r\n      <router-outlet></router-outlet>\r\n  \r\n    </div>\r\n  </div>\r\n  \r\n  "
        },
        {
            "name": "LayoutPageComponent",
            "id": "component-LayoutPageComponent-d0ddabe45a86fe7d66b883173ee5582a0bd21475d8cac167c91bff2185aa72974619576b936f34e8b550e0a9c9fecfc00a787d12d23a4e7a55d27bd2f1eb9497-1",
            "file": "src/app/heroes/pages/layout-page/layout-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-layout-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./layout-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "sidebarItems",
                    "defaultValue": "[\r\n    { label: 'Listado', icon: 'label', url: './list' },\r\n    { label: 'Añadir', icon: 'add', url: './new-hero' },\r\n    { label: 'Buscar', icon: 'search', url: './search' },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthService } from '../../../auth/services/auth.service';\r\nimport { User } from '../../../auth/interfaces/user.interface';\r\n\r\n@Component({\r\n  selector: 'app-layout-page',\r\n  templateUrl: './layout-page.component.html',\r\n  standalone: false,\r\n  styles: [\r\n  ]\r\n})\r\nexport class LayoutPageComponent {\r\n\r\n  public sidebarItems = [\r\n    { label: 'Listado', icon: 'label', url: './list' },\r\n    { label: 'Añadir', icon: 'add', url: './new-hero' },\r\n    { label: 'Buscar', icon: 'search', url: './search' },\r\n  ];\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  get user():User | undefined {\r\n    return this.authService.currentUser;\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n    this.router.navigate(['/auth/login'])\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "accessors": {
                "user": {
                    "name": "user",
                    "getSignature": {
                        "name": "user",
                        "type": "",
                        "returnType": "User | undefined",
                        "line": 27
                    }
                }
            },
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "LayoutPageComponent-1",
            "templateData": "<mat-sidenav-container fullscreen>\r\n\r\n    <mat-sidenav #sidenav mode=\"push\" [ngStyle]=\"{ width: '250px' }\">\r\n      <mat-toolbar>\r\n        <span>Menú</span>\r\n        <span class=\"spacer\"></span>\r\n        <button mat-icon-button (click)=\"sidenav.toggle()\">\r\n          <mat-icon>menu</mat-icon>\r\n        </button>\r\n  \r\n      </mat-toolbar>\r\n  \r\n      <mat-nav-list>\r\n        <mat-list-item\r\n          *ngFor=\"let item of sidebarItems\"\r\n          [routerLink]=\"item.url\"\r\n          (click)=\"sidenav.toggle()\"\r\n        >\r\n          <mat-icon matListItemIcon>{{ item.icon }}</mat-icon>\r\n          {{ item.label }}\r\n        </mat-list-item>\r\n      </mat-nav-list>\r\n  \r\n    </mat-sidenav>\r\n  \r\n  \r\n    <mat-toolbar color=\"primary\">\r\n      <button mat-icon-button (click)=\"sidenav.toggle()\">\r\n        <mat-icon>menu</mat-icon>\r\n      </button>\r\n  \r\n      <span class=\"spacer\"></span>\r\n  \r\n      <span>{{ user?.email }}</span>\r\n  \r\n      <button mat-button (click)=\"onLogout()\">\r\n        Logout\r\n      </button>\r\n  \r\n    </mat-toolbar>\r\n  \r\n  \r\n    <div class=\"container p-2\">\r\n  \r\n      <router-outlet></router-outlet>\r\n  \r\n    </div>\r\n  \r\n  </mat-sidenav-container>\r\n  \r\n  \r\n  \r\n  \r\n  "
        },
        {
            "name": "ListPageComponent",
            "id": "component-ListPageComponent-c5852be916917ed387224319d0e8e7a6d4b3379ebbae1026f6ef64749673ae872bbb1be94b269455b8808391733ed47ba40b9c3562ed133ef667aca0435baa8b",
            "file": "src/app/heroes/pages/list-page/list-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-list-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./list-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "heroes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Hero[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Hero } from '../../interfaces/hero.interface';\r\nimport { HeroesService } from '../../services/heroes.service';\r\n\r\n@Component({\r\n  selector: 'app-list-page',\r\n  templateUrl: './list-page.component.html',\r\n  standalone: false,\r\n  styles: [\r\n  ]\r\n})\r\nexport class ListPageComponent implements OnInit {\r\n\r\n  public heroes: Hero[] = [];\r\n\r\n  constructor( private heroesService: HeroesService ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.heroesService.getHeroes()\r\n      .subscribe( heroes => this.heroes = heroes );\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "heroesService",
                        "type": "HeroesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "heroesService",
                        "type": "HeroesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1>Listado de Héroes</h1>\r\n<mat-divider></mat-divider>\r\n\r\n<div class=\"grid bm-8 pt-2\">\r\n\r\n  <div *ngFor=\"let hero of heroes\"\r\n    class=\"col-12 sm:col-4 md:col-3 xl:col-2\">\r\n    <heroes-hero-card [hero]=\"hero\"></heroes-hero-card>\r\n  </div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "LoginPageComponent",
            "id": "component-LoginPageComponent-a041846005d43d4134d0525152ec118ee90f0bdd0697c896b338e80c3b18db6f6631dee3830c003fe040f49ee248c3bd3470e065464113597bd3d91bb9078b5c",
            "file": "src/app/auth/pages/login-page/login-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./login-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  standalone: false,\r\n  styles: [\r\n  ]\r\n})\r\nexport class LoginPageComponent {\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ){}\r\n\r\n  onLogin(): void {\r\n\r\n    this.authService.login('kevin@gmail.com','123456')\r\n      .subscribe( user => {\r\n\r\n        this.router.navigate(['/']);\r\n\r\n      });\r\n\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "\r\n<div class=\"flex flex-column\">\r\n\r\n    <span class=\"text-lg mb-4\">Login</span>\r\n  \r\n    <mat-form-field>\r\n      <mat-label>Usuario</mat-label>\r\n      <input type=\"text\" matInput placeholder=\"Nombre de usuario\">\r\n    </mat-form-field>\r\n  \r\n    <mat-form-field>\r\n      <mat-label>Contraseña</mat-label>\r\n      <input type=\"password\" matInput placeholder=\"Contraseña\">\r\n    </mat-form-field>\r\n  \r\n    <button mat-button mat-flat-button color=\"primary\"\r\n      (click)=\"onLogin()\">\r\n      <mat-icon>save</mat-icon>\r\n      Ingresar\r\n    </button>\r\n  \r\n  \r\n    <div class=\"flex justify-content-end mt-5\">\r\n      <a routerLink=\"/auth/new-account\">¿Ya tienes cuenta?</a>\r\n    </div>\r\n  \r\n  </div>\r\n  \r\n  "
        },
        {
            "name": "NewPageComponent",
            "id": "component-NewPageComponent-f9ce43bf2dc5fb58a7eea3245e303139bae427fc008bb24567f47e4a8a48484243abfa8b32825cd9e60f1f0ed7f1d8cc42722b162ddc8611a13097e115dbbd51",
            "file": "src/app/heroes/pages/new-page/new-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-new-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./new-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activatedRoute",
                    "defaultValue": "inject(ActivatedRoute)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "dialog",
                    "defaultValue": "inject(MatDialog)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "hero$",
                    "defaultValue": "signal(this.store.select(HeroSelectors.selectHero))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "heroForm",
                    "defaultValue": "new FormGroup({\r\n    id: new FormControl<string>(''),\r\n    superhero: new FormControl<string>('', { nonNullable: true }),\r\n    publisher: new FormControl<Publisher>(Publisher.DCComics),\r\n    alter_ego: new FormControl(''),\r\n    first_appearance: new FormControl(''),\r\n    characters: new FormControl(''),\r\n    alt_img: new FormControl(''),\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "isLoading$",
                    "defaultValue": "signal(this.store.select(HeroSelectors.selectHeroLoading))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "publishers",
                    "defaultValue": "[\r\n    { id: 'DC Comics', desc: 'DC - Comics' },\r\n    { id: 'Marvel Comics', desc: 'Marvel - Comics' },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "store",
                    "defaultValue": "inject(Store)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDeleteHero",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMethod to handle hero deletion.\nOpens a confirmation dialog before dispatching the delete action.\n",
                    "description": "<p>Method to handle hero deletion.\nOpens a confirmation dialog before dispatching the delete action.</p>\n"
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMethod to handle form submission.\nDispatches actions to create or update a hero.\n",
                    "description": "<p>Method to handle form submission.\nDispatches actions to create or update a hero.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, inject, signal } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { filter } from 'rxjs';\r\nimport { Store } from '@ngrx/store';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nimport { Publisher, Hero } from '../../interfaces/hero.interface';\r\nimport { ConfirmDialogComponent } from '../../components/confirm-dialog/confirm-dialog.component';\r\nimport * as HeroActions from './../../store/actions/hero.actions';\r\nimport * as HeroSelectors from './../../store/selectors/hero.selector';\r\n\r\n@Component({\r\n  selector: 'app-new-page',\r\n  templateUrl: './new-page.component.html',\r\n  standalone: false,\r\n  styles: []\r\n})\r\nexport class NewPageComponent implements OnInit {\r\n\r\n  private readonly store = inject(Store);\r\n  private readonly activatedRoute = inject(ActivatedRoute);\r\n  private readonly router = inject(Router);\r\n  private readonly dialog = inject(MatDialog);\r\n\r\n  public hero$ = signal(this.store.select(HeroSelectors.selectHero));\r\n  public isLoading$ = signal(this.store.select(HeroSelectors.selectHeroLoading));\r\n\r\n  public heroForm = new FormGroup({\r\n    id: new FormControl<string>(''),\r\n    superhero: new FormControl<string>('', { nonNullable: true }),\r\n    publisher: new FormControl<Publisher>(Publisher.DCComics),\r\n    alter_ego: new FormControl(''),\r\n    first_appearance: new FormControl(''),\r\n    characters: new FormControl(''),\r\n    alt_img: new FormControl(''),\r\n  });\r\n\r\n  public publishers = [\r\n    { id: 'DC Comics', desc: 'DC - Comics' },\r\n    { id: 'Marvel Comics', desc: 'Marvel - Comics' },\r\n  ];\r\n\r\n  get currentHero(): Hero {\r\n    return this.heroForm.value as Hero;\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    if (!this.router.url.includes('edit')) return;\r\n\r\n    this.activatedRoute.params.subscribe(({ id }) => {\r\n      this.store.dispatch(HeroActions.loadHero({ id }));\r\n    });\r\n\r\n    this.hero$().subscribe(hero => {\r\n      if (!hero || !hero.id) return;\r\n\r\n      this.heroForm.setValue({\r\n        id: hero.id ?? '',\r\n        superhero: hero.superhero ?? '',\r\n        publisher: hero.publisher ?? Publisher.DCComics,\r\n        alter_ego: hero.alter_ego ?? '',\r\n        first_appearance: hero.first_appearance ?? '',\r\n        characters: hero.characters ?? '',\r\n        alt_img: hero.alt_img ?? ''\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Method to handle form submission.\r\n   * Dispatches actions to create or update a hero.\r\n   */\r\n  onSubmit(): void {\r\n    if (this.heroForm.invalid) return;\r\n\r\n    let newHero: Hero = this.heroForm.getRawValue() as Hero;\r\n\r\n    Object.keys(newHero).forEach((key) => {\r\n      const property = key as keyof Hero;\r\n      if (typeof newHero[property] === 'string' && property !== 'publisher' ) {\r\n        newHero[property] = (newHero[property] as string).trim();\r\n      }\r\n    });\r\n\r\n    if (!newHero.id) {\r\n      newHero.id = `${newHero.publisher.split(' ')[0].toLowerCase()}-${newHero.superhero.toLowerCase().replace(/\\s+/g, '-')}`;\r\n    }\r\n\r\n    console.log('📌 Dispatching createHero:', newHero); // Debugging\r\n\r\n    this.store.dispatch(HeroActions.createHero({ hero: newHero }));\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  /**\r\n   * Method to handle hero deletion.\r\n   * Opens a confirmation dialog before dispatching the delete action.\r\n   */\r\n  onDeleteHero() {\r\n    if (!this.currentHero.id) throw Error('Hero id is required');\r\n\r\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n      data: this.heroForm.value\r\n    });\r\n\r\n    dialogRef.afterClosed()\r\n      .pipe(filter((result: boolean) => result))\r\n      .subscribe(() => {\r\n        this.store.dispatch(HeroActions.deleteHero({ id: this.currentHero.id! }));\r\n      });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "currentHero": {
                    "name": "currentHero",
                    "getSignature": {
                        "name": "currentHero",
                        "type": "",
                        "returnType": "Hero",
                        "line": 44
                    }
                }
            },
            "templateData": "<h1>\r\n    {{ currentHero.id ? 'Editar' : 'Agregar' }}\r\n    héroe\r\n    <small *ngIf=\"currentHero.id\">{{ currentHero.superhero }}</small>\r\n  </h1>\r\n  \r\n  <mat-divider class=\"mb-2\"></mat-divider>\r\n  \r\n  <div class=\"grid\">\r\n  \r\n    <div class=\"col-12 sm:col-6\">\r\n      <mat-card>\r\n        <mat-card-content>\r\n  \r\n          <form class=\"grid\" [formGroup]=\"heroForm\" (ngSubmit)=\"onSubmit()\">\r\n  \r\n            <mat-form-field class=\"col-12 sm:col-6\">\r\n              <mat-label>Super héroe</mat-label>\r\n              <input\r\n                matInput\r\n                type=\"text\"\r\n                required\r\n                formControlName=\"superhero\"\r\n              />\r\n            </mat-form-field>\r\n  \r\n            <mat-form-field class=\"col-12 sm:col-6\">\r\n              <mat-label>Alter ego</mat-label>\r\n              <input\r\n                matInput\r\n                type=\"text\"\r\n                required\r\n                formControlName=\"alter_ego\"\r\n              />\r\n            </mat-form-field>\r\n  \r\n  \r\n            <mat-form-field class=\"col-12\">\r\n              <mat-label>Primera aparición</mat-label>\r\n              <input\r\n                matInput\r\n                type=\"text\"\r\n                required\r\n                formControlName=\"first_appearance\"\r\n              />\r\n            </mat-form-field>\r\n  \r\n            <mat-form-field class=\"col-12\">\r\n              <mat-label>Personajes</mat-label>\r\n              <input\r\n                matInput\r\n                type=\"text\"\r\n                required\r\n                formControlName=\"characters\"\r\n              />\r\n            </mat-form-field>\r\n  \r\n            <mat-form-field class=\"col-12\">\r\n              <mat-label>Creador</mat-label>\r\n              <mat-select\r\n                formControlName=\"publisher\"\r\n                required\r\n              >\r\n                <mat-option *ngFor=\"let publisher of publishers\"\r\n                  [value]=\"publisher.id\">\r\n                  {{ publisher.desc }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n  \r\n            <mat-form-field class=\"col-12\">\r\n              <mat-label>Alternative Image</mat-label>\r\n              <input\r\n                matInput\r\n                type=\"text\"\r\n                formControlName=\"alt_img\"\r\n              />\r\n            </mat-form-field>\r\n  \r\n  \r\n          </form>\r\n  \r\n          <div class=\"flex justify-content-between\">\r\n            <button\r\n              *ngIf=\"currentHero.id\"\r\n              (click)=\"onDeleteHero()\"\r\n              mat-flat-button\r\n              color=\"warn\"\r\n            >\r\n              Borrar\r\n            </button>\r\n            <span></span>\r\n  \r\n            <button\r\n              mat-flat-button\r\n              color=\"primary\"\r\n              (click)=\"onSubmit()\"\r\n            >\r\n              <mat-icon>save</mat-icon>\r\n              Guardar\r\n            </button>\r\n          </div>\r\n  \r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  \r\n    <div class=\"col-12 sm:col-6\">\r\n  \r\n      <mat-card>\r\n        <img [src]=\"currentHero | heroImage\" alt=\"imagen del héroe\" mat-card-image>\r\n      </mat-card>\r\n  \r\n    </div>\r\n  </div>\r\n  \r\n  \r\n  "
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-21dd6eb370b4983b5c21c84d40e6f54d266a9d9af9889e6e76b35c43058bd53b3e451bad089d5adf4bea46647ba10265a2fa8cb15630398e75636307d4817fc6",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  margin: 0 auto;\n  padding: 48px 20px;\n  max-width: 600px;\n  color: #333;\n  font-size: 14px;\n  line-height: 24px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-page h2 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 0 4px;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  color: inherit;\n}\n\n.storybook-page ul {\n  margin: 1em 0;\n  padding-left: 30px;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  vertical-align: top;\n  margin-right: 10px;\n  border-radius: 1em;\n  background: #e7fdd8;\n  padding: 4px 12px;\n  color: #357a14;\n  font-weight: 700;\n  font-size: 11px;\n  line-height: 12px;\n}\n\n.storybook-page .tip-wrapper {\n  margin-top: 40px;\n  margin-bottom: 40px;\n  font-size: 13px;\n  line-height: 20px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  vertical-align: top;\n  margin-top: 3px;\n  margin-right: 4px;\n  width: 12px;\n  height: 12px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "RegisterPageComponent",
            "id": "component-RegisterPageComponent-2069a58cde219154cc77c1a47ff7d99a7d108f593ac05d9db9b134a3a02e449446a091d012af3b77c8f581302573b6919405f96dd01eb2cdffe3767ba4e23f48",
            "file": "src/app/auth/pages/register-page/register-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-register-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./register-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-register-page',\r\n  templateUrl: './register-page.component.html',\r\n  standalone: false,\r\n  styles: [\r\n  ]\r\n})\r\nexport class RegisterPageComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "\r\n<div class=\"flex flex-column\">\r\n\r\n    <span class=\"text-lg mb-4\">Registro</span>\r\n  \r\n    <mat-form-field>\r\n      <mat-label>Usuario</mat-label>\r\n      <input type=\"text\" matInput placeholder=\"Nombre de usuario\">\r\n    </mat-form-field>\r\n  \r\n    <mat-form-field>\r\n      <mat-label>Nombre</mat-label>\r\n      <input type=\"text\" matInput placeholder=\"Nombre de usuario\">\r\n    </mat-form-field>\r\n  \r\n    <mat-form-field>\r\n      <mat-label>Contraseña</mat-label>\r\n      <input type=\"password\" matInput placeholder=\"Contraseña\">\r\n    </mat-form-field>\r\n  \r\n    <button mat-button mat-flat-button color=\"primary\">\r\n      <mat-icon>save</mat-icon>\r\n      Crear cuenta\r\n    </button>\r\n  \r\n  \r\n    <div class=\"flex justify-content-end mt-5\">\r\n      <a routerLink=\"/auth/login\">¿No tienes cuenta?</a>\r\n    </div>\r\n  \r\n  </div>\r\n  \r\n  "
        },
        {
            "name": "SearchPageComponent",
            "id": "component-SearchPageComponent-48a86ed61a602a0b77c9bc0988a199ea976de015cc0469fbed2d43b310ec20e7feae590dbe60053e951a771fd641085a4372ac72e4c7030357c16623ff1a40a8",
            "file": "src/app/heroes/pages/search-page/search-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./search-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "heroes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Hero[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "searchInput",
                    "defaultValue": "new FormControl<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "selectedHero",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Hero",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onSelectedOption",
                    "args": [
                        {
                            "name": "event",
                            "type": "MatAutocompleteSelectedEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MatAutocompleteSelectedEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "searchHero",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\r\n\r\nimport { Hero } from '../../interfaces/hero.interface';\r\nimport { HeroesService } from '../../services/heroes.service';\r\n\r\n@Component({\r\n  selector: 'app-search-page',\r\n  templateUrl: './search-page.component.html',\r\n  standalone: false,\r\n})\r\nexport class SearchPageComponent {\r\n\r\n  public searchInput = new FormControl<string>('');\r\n  public heroes: Hero[] = [];\r\n  public selectedHero?: Hero;\r\n\r\n  constructor(private heroesService: HeroesService) {\r\n    this.searchInput.valueChanges\r\n      .subscribe(value => this.searchHero());\r\n  }\r\n\r\n  searchHero() {\r\n    const value: string = this.searchInput.value || '';\r\n\r\n    this.heroesService.getSuggestions(value)\r\n      .subscribe(heroes => this.heroes = heroes);\r\n  }\r\n\r\n\r\n  onSelectedOption(event: MatAutocompleteSelectedEvent): void {\r\n    if (!event.option.value) {\r\n      this.selectedHero = undefined;\r\n      return;\r\n    }\r\n\r\n    const hero: Hero = event.option.value;\r\n    this.searchInput.setValue(hero.superhero);\r\n    console.log('Hero:', hero.id);\r\n\r\n    const imgRelativePath = hero.id;\r\n    hero.alt_img = `../src/assets/heroes/${imgRelativePath}.jpg`;\r\n  \r\n\r\n    this.selectedHero = hero;\r\n    console.error('No ves que no renderiza ???',this.selectedHero.alt_img,);\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "heroesService",
                        "type": "HeroesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "heroesService",
                        "type": "HeroesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"flex flex-column p-2\">\r\n\r\n  <h3>Buscador</h3>\r\n\r\n  <mat-form-field>\r\n    <mat-label>Buscador de héroes</mat-label>\r\n    <input\r\n      type=\"text\"\r\n      matInput\r\n      [formControl]=\"searchInput\"\r\n      (input)=\"searchHero()\"\r\n      [matAutocomplete]=\"auto\"\r\n    />\r\n\r\n    <mat-autocomplete autoActiveFirstOption\r\n      #auto=\"matAutocomplete\"\r\n      (optionSelected)=\"onSelectedOption($event)\"\r\n    >\r\n      <mat-option *ngFor=\"let hero of heroes\" [value]=\"hero\">\r\n        {{ hero.superhero }}\r\n      </mat-option>\r\n\r\n      <mat-option\r\n        *ngIf=\"heroes.length === 0 && searchInput.value && searchInput.value.length > 0\"\r\n        value=\"\">\r\n        No se encontró nada con el término {{ searchInput.value }}\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n\r\n  </mat-form-field>\r\n\r\n  <!-- <div *ngIf=\"selectedHero\" class=\"card mt-4\">\r\n    <div class=\"card-body\">\r\n      <h2 class=\"card-title\">{{ selectedHero.superhero }}</h2>\r\n      <p class=\"card-text\"><strong>Nombre Real:</strong> {{ selectedHero.characters }}</p>\r\n      <p class=\"card-text\"><strong>Editorial:</strong> {{ selectedHero.publisher }}</p>\r\n      <p class=\"card-text\"><strong>Primera Aparición:</strong> {{ selectedHero.first_appearance }}</p>\r\n      <p class=\"card-text\"><strong>Personajes:</strong> {{ selectedHero.superhero }}</p>\r\n      <img *ngIf=\"selectedHero.alt_img\" [src]=\"selectedHero.alt_img\" alt=\"{{ selectedHero.superhero }}\" class=\"img-fluid\">\r\n    </div>\r\n  </div> -->\r\n\r\n  <div class=\"d-flex justify-content-center mt-4\">\r\n\r\n    <div class=\"card\" *ngIf=\"selectedHero\" style=\"width: 18rem;\">\r\n      <img class=\"card-img-top\" [src]=\"selectedHero.alt_img\" alt=\"Card image cap\">\r\n      <div class=\"card-body\">\r\n        <h5 class=\"card-title text-center font-weight-bold\">{{selectedHero.superhero}}</h5>\r\n      </div>\r\n      <ul class=\"list-group list-group-flush\">\r\n        <li class=\"list-group-item\"><p class=\"card-text\"><strong>Editorial:</strong> {{ selectedHero.publisher }}</p></li>\r\n        <li class=\"list-group-item\"><p class=\"card-text\"><strong>Primera Aparición:</strong> {{ selectedHero.first_appearance }}</p>\r\n        </li>\r\n        <li class=\"list-group-item\"><p class=\"card-text\"><strong>Personajes:</strong> {{ selectedHero.superhero }}</p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n</div>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-71432fdc2e8f3db638038786cd20212e88a953cf18293691659a7f82615ed4c092b875ae831b1d41f93189778bb4d776542f80d8c8b8501ec12e4d00022e7ad6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n// import { HttpClientModule } from '@angular/common/http';\r\nimport { provideHttpClient } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  providers: [provideHttpClient()],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    // HttpClientModule,\r\n    AppRoutingModule,\r\n    CommonModule,\r\n    StoreModule.forRoot({}),\r\n    EffectsModule.forRoot([]), // This is correct, keep empty for root\r\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: false }),\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-6c8bfda99d748ed159575b3fe1d6bffa5b9cdf80e681d8aa7acb33f5e33d023aadb93d4c0a5bf8897aca79e9b43fc394c498d84f8e75b1b51a9de1c9c13d077a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { Error404PageComponent } from './common/pages/error404-page/error404-page.component';\r\n\r\nimport { AuthGuard } from './auth/guards/auth.guard';\r\nimport { PublicGuard } from './auth/guards/public.guard';\r\n\r\n// dominio.com/\r\nconst routes: Routes = [\r\n  {\r\n    path: 'auth',\r\n    loadChildren: () => \"import('./auth/auth.module').then(m => m.AuthModule)\",\r\n    canActivate: [PublicGuard],\r\n    canMatch: [PublicGuard]\r\n  },\r\n  {\r\n    path: 'heroes',\r\n    loadChildren: () => \"import('./heroes/heroes.module').then(m => m.HeroesModule)\",\r\n    canActivate: [AuthGuard],\r\n    canMatch: [AuthGuard]\r\n  },\r\n  {\r\n    path: '404',\r\n    component: Error404PageComponent,\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'heroes',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '404',\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthModule",
            "id": "module-AuthModule-5fbb8b75c5f42fadfc5dd0ba7987d8dca2f825e6866cbb683f3c77dd30b930cb6cf0423357c1cb5287a5d37dd9687e0aec5fa5370982395082539a7ce8f89043",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/auth.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { LayoutPageComponent } from './pages/layout-page/layout-page.component';\r\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\r\nimport { RegisterPageComponent } from './pages/register-page/register-page.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        RegisterPageComponent,\r\n        LoginPageComponent,\r\n        LayoutPageComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        AuthRoutingModule,\r\n        MaterialModule,\r\n        RouterModule,\r\n    ]\r\n        \r\n})\r\nexport class AuthModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LayoutPageComponent"
                        },
                        {
                            "name": "LoginPageComponent"
                        },
                        {
                            "name": "RegisterPageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AuthRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthRoutingModule",
            "id": "module-AuthRoutingModule-278dd1b6bd0da5a33fb9929873453940fb93775d465020420ec2748715c4ddbf6ca94fd6eeeb153ef4b09837ca0c960445f9a79bc250e0069550375c80dbeb50",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/auth-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LayoutPageComponent } from './pages/layout-page/layout-page.component';\r\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\r\nimport { RegisterPageComponent } from './pages/register-page/register-page.component';\r\n\r\n// localhost:4200/auth/\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: LayoutPageComponent,\r\n        children: [\r\n            { path: 'login', component: LoginPageComponent },\r\n            { path: 'new-account', component: RegisterPageComponent },\r\n            { path: '**', redirectTo: 'login' },\r\n        ]\r\n    }\r\n];\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HeroesModule",
            "id": "module-HeroesModule-cf59d2083f1dd0f6f83f7729def85e2aed5f525fb643c212d22dcc03bf368c09871b78a95741cae4efd70314f527f83dd02642a42004492766c16d82c26f6751",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/heroes/heroes.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { HeroesRoutingModule } from './heroes-routing.module';\r\nimport { MaterialModule } from '../material/material.module';\r\n\r\nimport { HeroPageComponent } from './pages/hero-page/hero-page.component';\r\nimport { LayoutPageComponent } from './pages/layout-page/layout-page.component';\r\nimport { ListPageComponent } from './pages/list-page/list-page.component';\r\nimport { NewPageComponent } from './pages/new-page/new-page.component';\r\nimport { SearchPageComponent } from './pages/search-page/search-page.component';\r\nimport { CardComponent } from './components/card/card.component';\r\nimport { HeroImagePipe } from './pipes/hero-image.pipe';\r\nimport { ConfirmDialogComponent } from './components/confirm-dialog/confirm-dialog.component';\r\nimport { HeroEffects, HeroReducer } from './store';\r\nimport { HeroesService } from './services/heroes.service';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        HeroPageComponent,\r\n        LayoutPageComponent,\r\n        ListPageComponent,\r\n        NewPageComponent,\r\n        SearchPageComponent,\r\n        CardComponent,\r\n        ConfirmDialogComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        HeroesRoutingModule,\r\n        MaterialModule,\r\n        StoreModule.forFeature('heroes', HeroReducer),\r\n        EffectsModule.forFeature([HeroEffects]), \r\n        HeroImagePipe,\r\n    ],\r\n    providers: [HeroesService],\r\n})\r\nexport class HeroesModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "HeroesService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "ConfirmDialogComponent"
                        },
                        {
                            "name": "HeroPageComponent"
                        },
                        {
                            "name": "ListPageComponent"
                        },
                        {
                            "name": "NewPageComponent"
                        },
                        {
                            "name": "SearchPageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "HeroImagePipe"
                        },
                        {
                            "name": "HeroesRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HeroesRoutingModule",
            "id": "module-HeroesRoutingModule-4a8a4faddd310c800c55ffd615933b3f4a14844514ddd257acf6953bc8eb1e1b488a09dcea94fda81b8bb0ad12c68124e348faf139ba6652a2270a620e21c49a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/heroes/heroes-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LayoutPageComponent } from './pages/layout-page/layout-page.component';\r\nimport { NewPageComponent } from './pages/new-page/new-page.component';\r\nimport { SearchPageComponent } from './pages/search-page/search-page.component';\r\nimport { ListPageComponent } from './pages/list-page/list-page.component';\r\nimport { HeroPageComponent } from './pages/hero-page/hero-page.component';\r\n\r\n\r\n// localhost:4200/heroes\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: LayoutPageComponent,\r\n        children: [\r\n            { path: 'new-hero', component: NewPageComponent },\r\n            { path: 'search', component: SearchPageComponent },\r\n            { path: 'edit/:id', component: NewPageComponent },\r\n            { path: 'list', component: ListPageComponent },\r\n            { path: ':id', component: HeroPageComponent },\r\n            { path: '**', redirectTo: 'list' },\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class HeroesRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "id": "module-MaterialModule-1144be3d400d9ba36d6fc302b67a781f23ea4e8c7c0b4050be01307aa213afdc1cb4a2d61997ed6f91c930424f833b2b73ae983e296f5c02d30e4668a03dc10b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/material/material.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\n\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\n\r\n@NgModule({\r\n    exports: [\r\n        MatAutocompleteModule,\r\n        MatButtonModule,\r\n        MatCardModule,\r\n        MatChipsModule,\r\n        MatDialogModule,\r\n        MatFormFieldModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatProgressSpinnerModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatSnackBarModule,\r\n        MatToolbarModule,\r\n    ]\r\n})\r\nexport class MaterialModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "createHero",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/heroes/store/actions/hero.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[Hero] Create Hero',\r\n    props<{ hero: Hero }>()\r\n)"
            },
            {
                "name": "createHeroFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/heroes/store/actions/hero.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[Hero] Create Hero Failure',\r\n    props<{ error: any }>()\r\n)"
            },
            {
                "name": "createHeroSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/heroes/store/actions/hero.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction( \r\n    '[Hero] Create Hero Success',\r\n    props<{ hero: Hero }>()\r\n)"
            },
            {
                "name": "deleteHero",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/heroes/store/actions/hero.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[Hero] Delete Hero',\r\n    props<{ id: string }>()\r\n)"
            },
            {
                "name": "deleteHeroFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/heroes/store/actions/hero.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[Hero] Delete Hero Failure',\r\n    props<{ error: any }>()\r\n)"
            },
            {
                "name": "deleteHeroSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/heroes/store/actions/hero.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[Hero] Delete Hero Success',\r\n    props<{ id: string }>()\r\n)"
            },
            {
                "name": "environments",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environments.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  baseUrl: 'http://localhost:3000'\r\n}"
            },
            {
                "name": "environments",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environments.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  baseUrl: 'http://localhost:3000'\r\n}"
            },
            {
                "name": "HeroReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/heroes/store/reducers/hero.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n    initialState,\r\n\r\n    // Load hero\r\n    on(HeroActions.loadHero, state => ({\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n    })),\r\n    on(HeroActions.loadHeroSuccess, (state, { hero }) => ({\r\n        ...state,\r\n        hero,\r\n        loading: false\r\n    })),\r\n    on(HeroActions.loadHeroFailure, (state, { error }) => ({\r\n        ...state,\r\n        error,\r\n        loading: false\r\n    })),\r\n\r\n    // Create hero\r\n    on(HeroActions.createHero, state => ({\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n    })),\r\n    on(HeroActions.createHeroSuccess, (state, { hero }) => ({\r\n        ...state,\r\n        hero,\r\n        loading: false\r\n    })),\r\n    on(HeroActions.createHeroFailure, (state, { error }) => ({\r\n        ...state,\r\n        error,\r\n        loading: false\r\n    })),\r\n\r\n    // Update hero\r\n    on(HeroActions.updateHero, state => ({\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n    })),\r\n    on(HeroActions.updateHeroSuccess, (state, { hero }) => ({\r\n        ...state,\r\n        hero,\r\n        loading: false\r\n    })),\r\n    on(HeroActions.updateHeroFailure, (state, { error }) => ({\r\n        ...state,\r\n        error,\r\n        loading: false\r\n    })),\r\n\r\n    // Delete hero\r\n    on(HeroActions.deleteHero, state => ({\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n    })),\r\n    on(HeroActions.deleteHeroSuccess, state => ({\r\n        ...state,\r\n        hero: null,\r\n        loading: false\r\n    })),\r\n    on(HeroActions.deleteHeroFailure, (state, { error }) => ({\r\n        ...state,\r\n        error,\r\n        loading: false\r\n    }))\r\n)"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/heroes/store/reducers/hero.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "HeroState",
                "defaultValue": "{\r\n    hero: null,\r\n    loading: false,\r\n    error: null\r\n}"
            },
            {
                "name": "loadHero",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/heroes/store/actions/hero.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[Hero] Load Hero',\r\n    props<{ id: string }>()\r\n)"
            },
            {
                "name": "loadHeroFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/heroes/store/actions/hero.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[Hero] Load Hero Failure',\r\n    props<{ error: any }>()\r\n)"
            },
            {
                "name": "loadHeroSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/heroes/store/actions/hero.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[Hero] Load Hero Success',\r\n    props<{ hero: Hero }>() \r\n)"
            },
            {
                "name": "sampleHeroes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/mocks/hero.mock.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type",
                "defaultValue": "{\r\n    superman: {\r\n        id: 'dc-superman',\r\n        superhero: 'Superman',\r\n        publisher: Publisher.DCComics,\r\n        alter_ego: 'Clark Kent',\r\n        first_appearance: 'Action Comics #1',\r\n        characters: 'Kal-El',\r\n    },\r\n    batman: {\r\n        id: 'dc-batman',\r\n        superhero: 'Batman',\r\n        publisher: Publisher.DCComics,\r\n        alter_ego: 'Bruce Wayne',\r\n        first_appearance: 'Detective Comics #27',\r\n        characters: 'Bruce Wayne'\r\n    },\r\n    ironman: {\r\n        id: 'marvel-iron',\r\n        superhero: 'Iron Man',\r\n        publisher: Publisher.MarvelComics,\r\n        alter_ego: 'Tony Stark',\r\n        first_appearance: 'Tales of Suspense #39',\r\n        characters: 'Tony Stark'\r\n    }\r\n}"
            },
            {
                "name": "selectHero",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/heroes/store/selectors/hero.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    selectHeroState,\r\n    (state) => state.hero\r\n)"
            },
            {
                "name": "selectHeroError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/heroes/store/selectors/hero.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    selectHeroState,\r\n    (state) => state.error\r\n)"
            },
            {
                "name": "selectHeroLoading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/heroes/store/selectors/hero.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    selectHeroState,\r\n    (state) => state.loading\r\n)"
            },
            {
                "name": "selectHeroState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/heroes/store/selectors/hero.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<HeroState>('heroes')"
            },
            {
                "name": "updateHero",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/heroes/store/actions/hero.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[Hero] Update Hero',\r\n    props<{ hero: Hero }>()\r\n)"
            },
            {
                "name": "updateHeroFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/heroes/store/actions/hero.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[Hero] Update Hero Failure',\r\n    props<{ error: any }>()\r\n)"
            },
            {
                "name": "updateHeroSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/heroes/store/actions/hero.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[Hero] Update Hero Success',\r\n    props<{ hero: Hero }>()\r\n)"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [
            {
                "name": "Publisher",
                "childs": [
                    {
                        "name": "DCComics",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "DC Comics"
                    },
                    {
                        "name": "MarvelComics",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Marvel Comics"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/heroes/interfaces/hero.interface.ts"
            }
        ],
        "groupedVariables": {
            "src/app/heroes/store/actions/hero.actions.ts": [
                {
                    "name": "createHero",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/heroes/store/actions/hero.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[Hero] Create Hero',\r\n    props<{ hero: Hero }>()\r\n)"
                },
                {
                    "name": "createHeroFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/heroes/store/actions/hero.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[Hero] Create Hero Failure',\r\n    props<{ error: any }>()\r\n)"
                },
                {
                    "name": "createHeroSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/heroes/store/actions/hero.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction( \r\n    '[Hero] Create Hero Success',\r\n    props<{ hero: Hero }>()\r\n)"
                },
                {
                    "name": "deleteHero",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/heroes/store/actions/hero.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[Hero] Delete Hero',\r\n    props<{ id: string }>()\r\n)"
                },
                {
                    "name": "deleteHeroFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/heroes/store/actions/hero.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[Hero] Delete Hero Failure',\r\n    props<{ error: any }>()\r\n)"
                },
                {
                    "name": "deleteHeroSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/heroes/store/actions/hero.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[Hero] Delete Hero Success',\r\n    props<{ id: string }>()\r\n)"
                },
                {
                    "name": "loadHero",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/heroes/store/actions/hero.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[Hero] Load Hero',\r\n    props<{ id: string }>()\r\n)"
                },
                {
                    "name": "loadHeroFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/heroes/store/actions/hero.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[Hero] Load Hero Failure',\r\n    props<{ error: any }>()\r\n)"
                },
                {
                    "name": "loadHeroSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/heroes/store/actions/hero.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[Hero] Load Hero Success',\r\n    props<{ hero: Hero }>() \r\n)"
                },
                {
                    "name": "updateHero",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/heroes/store/actions/hero.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[Hero] Update Hero',\r\n    props<{ hero: Hero }>()\r\n)"
                },
                {
                    "name": "updateHeroFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/heroes/store/actions/hero.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[Hero] Update Hero Failure',\r\n    props<{ error: any }>()\r\n)"
                },
                {
                    "name": "updateHeroSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/heroes/store/actions/hero.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[Hero] Update Hero Success',\r\n    props<{ hero: Hero }>()\r\n)"
                }
            ],
            "src/environments/environments.prod.ts": [
                {
                    "name": "environments",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environments.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  baseUrl: 'http://localhost:3000'\r\n}"
                }
            ],
            "src/environments/environments.ts": [
                {
                    "name": "environments",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environments.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  baseUrl: 'http://localhost:3000'\r\n}"
                }
            ],
            "src/app/heroes/store/reducers/hero.reducer.ts": [
                {
                    "name": "HeroReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/heroes/store/reducers/hero.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n    initialState,\r\n\r\n    // Load hero\r\n    on(HeroActions.loadHero, state => ({\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n    })),\r\n    on(HeroActions.loadHeroSuccess, (state, { hero }) => ({\r\n        ...state,\r\n        hero,\r\n        loading: false\r\n    })),\r\n    on(HeroActions.loadHeroFailure, (state, { error }) => ({\r\n        ...state,\r\n        error,\r\n        loading: false\r\n    })),\r\n\r\n    // Create hero\r\n    on(HeroActions.createHero, state => ({\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n    })),\r\n    on(HeroActions.createHeroSuccess, (state, { hero }) => ({\r\n        ...state,\r\n        hero,\r\n        loading: false\r\n    })),\r\n    on(HeroActions.createHeroFailure, (state, { error }) => ({\r\n        ...state,\r\n        error,\r\n        loading: false\r\n    })),\r\n\r\n    // Update hero\r\n    on(HeroActions.updateHero, state => ({\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n    })),\r\n    on(HeroActions.updateHeroSuccess, (state, { hero }) => ({\r\n        ...state,\r\n        hero,\r\n        loading: false\r\n    })),\r\n    on(HeroActions.updateHeroFailure, (state, { error }) => ({\r\n        ...state,\r\n        error,\r\n        loading: false\r\n    })),\r\n\r\n    // Delete hero\r\n    on(HeroActions.deleteHero, state => ({\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n    })),\r\n    on(HeroActions.deleteHeroSuccess, state => ({\r\n        ...state,\r\n        hero: null,\r\n        loading: false\r\n    })),\r\n    on(HeroActions.deleteHeroFailure, (state, { error }) => ({\r\n        ...state,\r\n        error,\r\n        loading: false\r\n    }))\r\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/heroes/store/reducers/hero.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HeroState",
                    "defaultValue": "{\r\n    hero: null,\r\n    loading: false,\r\n    error: null\r\n}"
                }
            ],
            "src/app/mocks/hero.mock.ts": [
                {
                    "name": "sampleHeroes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/mocks/hero.mock.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "defaultValue": "{\r\n    superman: {\r\n        id: 'dc-superman',\r\n        superhero: 'Superman',\r\n        publisher: Publisher.DCComics,\r\n        alter_ego: 'Clark Kent',\r\n        first_appearance: 'Action Comics #1',\r\n        characters: 'Kal-El',\r\n    },\r\n    batman: {\r\n        id: 'dc-batman',\r\n        superhero: 'Batman',\r\n        publisher: Publisher.DCComics,\r\n        alter_ego: 'Bruce Wayne',\r\n        first_appearance: 'Detective Comics #27',\r\n        characters: 'Bruce Wayne'\r\n    },\r\n    ironman: {\r\n        id: 'marvel-iron',\r\n        superhero: 'Iron Man',\r\n        publisher: Publisher.MarvelComics,\r\n        alter_ego: 'Tony Stark',\r\n        first_appearance: 'Tales of Suspense #39',\r\n        characters: 'Tony Stark'\r\n    }\r\n}"
                }
            ],
            "src/app/heroes/store/selectors/hero.selector.ts": [
                {
                    "name": "selectHero",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/heroes/store/selectors/hero.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    selectHeroState,\r\n    (state) => state.hero\r\n)"
                },
                {
                    "name": "selectHeroError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/heroes/store/selectors/hero.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    selectHeroState,\r\n    (state) => state.error\r\n)"
                },
                {
                    "name": "selectHeroLoading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/heroes/store/selectors/hero.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    selectHeroState,\r\n    (state) => state.loading\r\n)"
                },
                {
                    "name": "selectHeroState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/heroes/store/selectors/hero.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<HeroState>('heroes')"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/heroes/interfaces/hero.interface.ts": [
                {
                    "name": "Publisher",
                    "childs": [
                        {
                            "name": "DCComics",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "DC Comics"
                        },
                        {
                            "name": "MarvelComics",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Marvel Comics"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/heroes/interfaces/hero.interface.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "auth",
                        "loadChildren": "./auth/auth.module#AuthModule",
                        "canActivate": [
                            "PublicGuard"
                        ],
                        "canMatch": [
                            "PublicGuard"
                        ],
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/auth/auth-routing.module.ts",
                                        "module": "AuthRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "LayoutPageComponent",
                                                "children": [
                                                    {
                                                        "path": "login",
                                                        "component": "LoginPageComponent"
                                                    },
                                                    {
                                                        "path": "new-account",
                                                        "component": "RegisterPageComponent"
                                                    },
                                                    {
                                                        "path": "**",
                                                        "redirectTo": "login"
                                                    }
                                                ]
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "AuthModule"
                            }
                        ]
                    },
                    {
                        "path": "heroes",
                        "loadChildren": "./heroes/heroes.module#HeroesModule",
                        "canActivate": [
                            "AuthGuard"
                        ],
                        "canMatch": [
                            "AuthGuard"
                        ],
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/heroes/heroes-routing.module.ts",
                                        "module": "HeroesRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "LayoutPageComponent",
                                                "children": [
                                                    {
                                                        "path": "new-hero",
                                                        "component": "NewPageComponent"
                                                    },
                                                    {
                                                        "path": "search",
                                                        "component": "SearchPageComponent"
                                                    },
                                                    {
                                                        "path": "edit/:id",
                                                        "component": "NewPageComponent"
                                                    },
                                                    {
                                                        "path": "list",
                                                        "component": "ListPageComponent"
                                                    },
                                                    {
                                                        "path": ":id",
                                                        "component": "HeroPageComponent"
                                                    },
                                                    {
                                                        "path": "**",
                                                        "redirectTo": "list"
                                                    }
                                                ]
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "HeroesModule"
                            }
                        ]
                    },
                    {
                        "path": "404",
                        "component": "Error404PageComponent"
                    },
                    {
                        "path": "",
                        "redirectTo": "heroes",
                        "pathMatch": "full"
                    },
                    {
                        "path": "**",
                        "redirectTo": "404"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/guards/auth.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/guards/public.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "PublicGuard",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/interfaces/user.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/pages/layout-page/layout-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LayoutPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/pages/login-page/login-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/pages/register-page/register-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegisterPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/services/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/common/pages/error404-page/error404-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Error404PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/components/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/components/confirm-dialog/confirm-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ConfirmDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/interfaces/hero.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Hero",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/pages/hero-page/hero-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeroPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/pages/layout-page/layout-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LayoutPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/pages/list-page/list-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/pages/new-page/new-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewPageComponent",
                "coveragePercent": 16,
                "coverageCount": "2/12",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/pages/search-page/search-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/pipes/hero-image.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "HeroImagePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/services/heroes.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HeroesService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/store/actions/hero.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "createHero",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/store/actions/hero.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "createHeroFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/store/actions/hero.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "createHeroSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/store/actions/hero.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteHero",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/store/actions/hero.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteHeroFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/store/actions/hero.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteHeroSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/store/actions/hero.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadHero",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/store/actions/hero.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadHeroFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/store/actions/hero.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadHeroSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/store/actions/hero.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateHero",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/store/actions/hero.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateHeroFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/store/actions/hero.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateHeroSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/store/effects/hero.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HeroEffects",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/store/interfaces/hero.state.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "HeroState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/store/reducers/hero.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HeroReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/store/reducers/hero.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/store/selectors/hero.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectHero",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/store/selectors/hero.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectHeroError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/store/selectors/hero.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectHeroLoading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/heroes/store/selectors/hero.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectHeroState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/mocks/hero.mock.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sampleHeroes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environments.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environments",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environments.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environments",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}